version: 2
archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
before:
  hooks:
    # this is just an example and not a requirement for provider building/publishing
    #- go mod tidy
builds:
  -
    binary: '{{ .ProjectName }}_v{{ .Version }}'
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    goos:
      - darwin
      - freebsd
      - linux
      - windows
    goarch:
      - '386'
      - amd64
      - arm
      - arm64
    ignore:
      - goarch: arm
        goos: windows
      - goarch: arm64
        goos: freebsd
      - goarch: arm64
        goos: windows
      - goarch: arm64
        goos: openbsd
      - goos: darwin
        goarch: '386'
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    mod_timestamp: '{{ .CommitTimestamp }}'
checksum:
  algorithm: sha256
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
release:
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other
      # automated pipeline, you need to pass the batch flag to
      # indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
changelog:
  skip: true
